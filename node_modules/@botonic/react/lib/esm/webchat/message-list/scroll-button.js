import { jsx as _jsx, Fragment as _Fragment } from "react/jsx-runtime";
import { useContext } from 'react';
import ArrowScrollDown from '../../assets/arrow-scroll-down.svg';
import { WEBCHAT } from '../../constants';
import { WebchatContext } from '../../contexts';
import { resolveImage } from '../../util/environment';
import { ContainerScrollButton } from './styles';
import { useDebounce } from './use-debounce';
export const ScrollButton = ({ handleClick, }) => {
    const { getThemeProperty } = useContext(WebchatContext);
    const show = useDebounce();
    const CustomScrollButton = getThemeProperty(WEBCHAT.CUSTOM_PROPERTIES.scrollButtonCustom, undefined);
    const scrollButtonEnabled = getThemeProperty(WEBCHAT.CUSTOM_PROPERTIES.scrollButtonEnabled, CustomScrollButton);
    return (_jsx(_Fragment, { children: scrollButtonEnabled && show ? (_jsx(_Fragment, { children: CustomScrollButton ? (_jsx(CustomScrollButton, { handleScrollToBottom: handleClick })) : (_jsx(ContainerScrollButton, Object.assign({ onClick: handleClick }, { children: _jsx("img", { src: resolveImage(ArrowScrollDown) }) }))) })) : null }));
};
//# sourceMappingURL=scroll-button.js.map