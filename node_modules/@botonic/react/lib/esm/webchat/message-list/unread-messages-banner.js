import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { useContext, useEffect } from 'react';
import ArrowDown from '../../assets/arrow-down.svg';
import { WEBCHAT } from '../../constants';
import { WebchatContext } from '../../contexts';
import { resolveImage } from '../../util/environment';
import { ContainerUnreadMessagesBanner } from './styles';
export const UnreadMessagesBanner = ({ unreadMessagesBannerRef, }) => {
    const { getThemeProperty, webchatState } = useContext(WebchatContext);
    const CustomUnreadMessagesBanner = getThemeProperty(WEBCHAT.CUSTOM_PROPERTIES.notificationsBannerCustom, undefined);
    const notificationsBannerEnabled = getThemeProperty(WEBCHAT.CUSTOM_PROPERTIES.notificationsBannerEnabled, undefined);
    const notificationsEnabled = getThemeProperty(WEBCHAT.CUSTOM_PROPERTIES.notificationsEnabled, CustomUnreadMessagesBanner || notificationsBannerEnabled);
    const text = getThemeProperty(WEBCHAT.CUSTOM_PROPERTIES.notificationsBannerText, 'unread messages');
    useEffect(() => {
        if (webchatState.isWebchatOpen && unreadMessagesBannerRef.current) {
            unreadMessagesBannerRef.current.scrollIntoView({
                behavior: 'smooth',
                block: 'center',
            });
        }
    }, [webchatState.isWebchatOpen, unreadMessagesBannerRef]);
    return (_jsx(_Fragment, { children: notificationsEnabled ? (_jsx("div", Object.assign({ ref: unreadMessagesBannerRef }, { children: CustomUnreadMessagesBanner ? (_jsx(CustomUnreadMessagesBanner, {})) : (_jsxs(ContainerUnreadMessagesBanner, { children: [_jsx("img", { src: resolveImage(ArrowDown) }), webchatState.numUnreadMessages, " ", text] })) }))) : null }));
};
//# sourceMappingURL=unread-messages-banner.js.map