"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Audio = void 0;
const tslib_1 = require("tslib");
const jsx_runtime_1 = require("react/jsx-runtime");
const core_1 = require("@botonic/core");
const react_1 = tslib_1.__importDefault(require("react"));
const constants_1 = require("../constants");
const environment_1 = require("../util/environment");
const message_1 = require("./message");
const serialize = audioProps => {
    return { audio: audioProps.src };
};
const Audio = props => {
    props = Object.assign(Object.assign({}, props), { src: (0, environment_1.staticAsset)(props.src) });
    let content = props.children;
    if ((0, core_1.isBrowser)())
        content = ((0, jsx_runtime_1.jsxs)("audio", Object.assign({ style: { maxWidth: '100%' }, id: 'myAudio', controls: true }, { children: [(0, jsx_runtime_1.jsx)("source", { src: props.src, type: 'audio/mpeg' }), "Your browser does not support this audio format."] })));
    return ((0, jsx_runtime_1.jsx)(message_1.Message, Object.assign({ role: constants_1.ROLES.AUDIO_MESSAGE, json: serialize(props) }, props, { type: core_1.INPUT.AUDIO }, { children: content })));
};
exports.Audio = Audio;
exports.Audio.serialize = serialize;
//# sourceMappingURL=audio.js.map