"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ScrollButton = void 0;
const tslib_1 = require("tslib");
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const arrow_scroll_down_svg_1 = tslib_1.__importDefault(require("../../assets/arrow-scroll-down.svg"));
const constants_1 = require("../../constants");
const contexts_1 = require("../../contexts");
const environment_1 = require("../../util/environment");
const styles_1 = require("./styles");
const use_debounce_1 = require("./use-debounce");
const ScrollButton = ({ handleClick, }) => {
    const { getThemeProperty } = (0, react_1.useContext)(contexts_1.WebchatContext);
    const show = (0, use_debounce_1.useDebounce)();
    const CustomScrollButton = getThemeProperty(constants_1.WEBCHAT.CUSTOM_PROPERTIES.scrollButtonCustom, undefined);
    const scrollButtonEnabled = getThemeProperty(constants_1.WEBCHAT.CUSTOM_PROPERTIES.scrollButtonEnabled, CustomScrollButton);
    return ((0, jsx_runtime_1.jsx)(jsx_runtime_1.Fragment, { children: scrollButtonEnabled && show ? ((0, jsx_runtime_1.jsx)(jsx_runtime_1.Fragment, { children: CustomScrollButton ? ((0, jsx_runtime_1.jsx)(CustomScrollButton, { handleScrollToBottom: handleClick })) : ((0, jsx_runtime_1.jsx)(styles_1.ContainerScrollButton, Object.assign({ onClick: handleClick }, { children: (0, jsx_runtime_1.jsx)("img", { src: (0, environment_1.resolveImage)(arrow_scroll_down_svg_1.default) }) }))) })) : null }));
};
exports.ScrollButton = ScrollButton;
//# sourceMappingURL=scroll-button.js.map